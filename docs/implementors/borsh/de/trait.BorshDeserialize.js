(function() {var implementors = {};
implementors["fungible_token"] = [{"text":"impl BorshDeserialize for <a class=\"enum\" href=\"fungible_token/enum.Type.html\" title=\"enum fungible_token::Type\">Type</a>","synthetic":false,"types":["fungible_token::Type"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"fungible_token/struct.Metadata.html\" title=\"struct fungible_token::Metadata\">Metadata</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"fungible_token/enum.Type.html\" title=\"enum fungible_token::Type\">Type</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.bool.html\">bool</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.bool.html\">bool</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.bool.html\">bool</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.bool.html\">bool</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.bool.html\">bool</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.u128.html\">u128</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["fungible_token::Metadata"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"fungible_token/struct.Contract.html\" title=\"struct fungible_token::Contract\">Contract</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FungibleToken: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;LazyOption&lt;FungibleTokenMetadata&gt;: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["fungible_token::Contract"]}];
implementors["market"] = [{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"market/sale/struct.Ask.html\" title=\"struct market::sale::Ask\">Ask</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["market::sale::Ask"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"market/sale/struct.Bid.html\" title=\"struct market::sale::Bid\">Bid</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["market::sale::Bid"]},{"text":"impl BorshDeserialize for <a class=\"enum\" href=\"market/sale/enum.Position.html\" title=\"enum market::sale::Position\">Position</a>","synthetic":false,"types":["market::sale::Position"]},{"text":"impl BorshDeserialize for <a class=\"enum\" href=\"market/sale/enum.Method.html\" title=\"enum market::sale::Method\">Method</a>","synthetic":false,"types":["market::sale::Method"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"market/struct.Contract.html\" title=\"struct market::Contract\">Contract</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;UnorderedMap&lt;<a class=\"type\" href=\"market/type.ContractAndId.html\" title=\"type market::ContractAndId\">ContractAndId</a>, <a class=\"struct\" href=\"market/sale/struct.Ask.html\" title=\"struct market::sale::Ask\">Ask</a>&gt;: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;UnorderedMap&lt;<a class=\"type\" href=\"market/type.ContractAndId.html\" title=\"type market::ContractAndId\">ContractAndId</a>, <a class=\"struct\" href=\"market/sale/struct.Bid.html\" title=\"struct market::sale::Bid\">Bid</a>&gt;: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.u128.html\">u128</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.0/std/primitive.u128.html\">u128</a>: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;LookupMap&lt;AccountId, UnorderedSet&lt;<a class=\"type\" href=\"market/type.ContractAndId.html\" title=\"type market::ContractAndId\">ContractAndId</a>&gt;&gt;: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;LookupMap&lt;AccountId, UnorderedSet&lt;<a class=\"type\" href=\"market/type.ContractAndId.html\" title=\"type market::ContractAndId\">ContractAndId</a>&gt;&gt;: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;LookupMap&lt;AccountId, Balance&gt;: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["market::Contract"]}];
implementors["token_factory"] = [{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"token_factory/struct.FactoryContract.html\" title=\"struct token_factory::FactoryContract\">FactoryContract</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;UnorderedMap&lt;AccountId, <a class=\"struct\" href=\"token_factory/struct.TokenArgs.html\" title=\"struct token_factory::TokenArgs\">TokenArgs</a>&gt;: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["token_factory::FactoryContract"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"token_factory/struct.TokenArgs.html\" title=\"struct token_factory::TokenArgs\">TokenArgs</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;U128: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;FungibleTokenMetadata: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["token_factory::TokenArgs"]},{"text":"impl BorshDeserialize for <a class=\"struct\" href=\"token_factory/struct.Token.html\" title=\"struct token_factory::Token\">Token</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: BorshDeserialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"token_factory/struct.TokenArgs.html\" title=\"struct token_factory::TokenArgs\">TokenArgs</a>: BorshDeserialize,&nbsp;</span>","synthetic":false,"types":["token_factory::Token"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()