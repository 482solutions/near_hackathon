var searchIndex = JSON.parse('{\
"fungible_token":{"doc":"FungibleToken contract for EACs trading platform","t":[3,13,13,3,13,4,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,12,11,11,11,5,11,12,12,5,11,12,12,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,5,11,5,11,5,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11],"n":["Contract","GO","IREC","Metadata","REC","Type","aid_scheme_type","applies_to_cooling_energy","applies_to_electricity","applies_to_heating_energy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commissioning_date","default","deserialize","deserialize","deserialize","deserialize","deserialize","eac_id","energy_source","fmt","fmt","from","from","from","ft_balance_of","ft_balance_of","ft_metadata","ft_metadata","ft_mint","ft_mint","ft_resolve_transfer","ft_resolve_transfer","ft_total_supply","ft_total_supply","ft_transfer","ft_transfer","ft_transfer_by_signer","ft_transfer_by_signer","ft_transfer_call","ft_transfer_call","ft_transfer_safe","ft_transfer_safe","ft_type","into","into","into","is_registered","is_registered","issue_date","issuing_country","new","new","plant_location","plant_name","plant_performance","plant_received_investment_aid","plant_received_national_aid","plant_type","plant_uid","prod_end_date","prod_start_date","received_investment_aid","received_national_aid","register","register","register_resolve","serialize","serialize","serialize","serialize","serialize","storage_balance_bounds","storage_balance_bounds","storage_balance_of","storage_balance_of","storage_deposit","storage_deposit","storage_unregister","storage_unregister","storage_withdraw","storage_withdraw","transfer","transfer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["fungible_token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Metadata we provide","","Enum for token type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gives FT to user that called/deployed contract","Gives FT to user that called/deployed contract","","","","","","","","","","","","","","","","","","","","","Initializes the contract with the given total supply owned …","Initializes the contract with the given total supply owned …","","","","","","","","","","","","Used in cross-contract call to add account of unregistered …","Used in cross-contract call to add account of unregistered …","","","","","","","","","","","","","","","","","Used to manually transfer FT. Safe because of check below","Used to manually transfer FT. Safe because of check below","","","","","","","","",""],"i":[0,1,1,0,1,0,2,2,2,2,1,2,3,1,2,3,2,3,1,1,2,2,3,2,2,1,2,1,2,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,2,1,2,3,0,3,2,2,0,3,2,2,2,2,2,2,2,2,2,2,2,0,3,3,1,1,2,2,3,0,3,0,3,0,3,0,3,0,3,0,3,1,2,3,1,2,3,1,2,3],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["accountid",3]],["u128",3]],[[]],[[],["fungibletokenmetadata",3]],[[]],[[["metadata",3],["accountid",3],["balance",6]],["u128",3]],[[]],[[["u128",3],["accountid",3]],["u128",3]],[[]],[[],["u128",3]],[[]],[[["u128",3],["accountid",3],["string",3],["option",4,["string"]]]],[[]],[[["u128",3],["accountid",3],["string",3],["option",4,["string"]]]],[[]],[[["u128",3],["accountid",3],["string",3],["option",4,["string"]]],[["u128",3],["promiseorvalue",4,["u128"]]]],[[]],[[["u128",3],["accountid",3],["string",3],["option",4,["string"]]]],null,[[]],[[]],[[]],[[]],[[["accountid",3]],["bool",15]],null,null,[[]],[[["accountid",3],["fungibletokenmetadata",3]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[["accountid",3]]],[[["accountid",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[],["storagebalancebounds",3]],[[]],[[["accountid",3]],[["option",4,["storagebalance"]],["storagebalance",3]]],[[]],[[["option",4,["accountid"]],["option",4,["bool"]],["accountid",3],["bool",15]],["storagebalance",3]],[[]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[]],[[["u128",3],["option",4,["u128"]]],["storagebalance",3]],[[]],[[["accountid",3],["balance",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Type"],[3,"Metadata"],[3,"Contract"]]},\
"market":{"doc":"Market for EACs","t":[13,13,13,13,13,17,3,6,13,17,17,17,6,13,4,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,0,0,11,11,5,11,5,11,12,5,11,5,11,11,11,11,11,11,11,11,12,3,13,3,13,13,13,4,4,12,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,12,11,11,11,11,12,12,5,5,5,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5],"n":["Asks","AsksByOwnerId","Bids","BidsByOwnerId","ByOwnerIdInner","CCC","Contract","ContractAndId","FTTokenIds","NO_DEPOSIT","PROCESS_ASK","STORAGE_PER_SALE","SalePriceInYoctoNear","StorageDeposits","StorageKey","asks","asks_by_owner_id","asks_id","bids","bids_by_owner_id","bids_id","borrow","borrow","borrow_mut","borrow_mut","cancel_position","default","deserialize","direct_ask_sell","from","from","get_ask","get_asks","get_asks_by_owner_id","get_bid","get_bids","get_bids_by_owner_id","get_supply_asks","get_supply_bids","get_supply_by_owner_id","internal_place_ask","internal_place_bid","internal_remove_ask","internal_remove_bid","into","into","into_storage_key","new","new","owner_id","place_ask","place_bid","process_bid","remove_position","resolve_position","sale","sale_views","serialize","serialize","storage_balance_of","storage_balance_of","storage_deposit","storage_deposit","storage_deposits","storage_minimum_balance","storage_minimum_balance","storage_withdraw","storage_withdraw","try_from","try_from","try_into","try_into","type_id","type_id","update_price","account_id_hash","Ask","Ask","Bid","Bid","Direct","Managed","Method","Position","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_position","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direct_ask_sell","ext_self","fmt","fmt","from","from","from","from","ft_contract_id","into","into","into","into","owner_id","owner_id","place_ask","place_bid","process_bid","remove_position","resolve_position","sale_conditions","sale_conditions","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_price","resolve_position","get_ask","get_asks","get_asks_by_owner_id","get_bid","get_bids","get_bids_by_owner_id","get_supply_asks","get_supply_bids","get_supply_by_owner_id"],"q":["market","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","market::StorageKey","market::sale","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","market::sale::ext_self","market::sale_views","","","","","","","",""],"d":["","","","","","","Struct for storing various information about market state","","","","","","","","Helper structure to for keys of the persistent collections.","To keep track of the ask, we map the ContractAndTokenId to …","Keep track of all the Ask IDs for every account ID","Current id for asks","Same with bids","Keep track of all the Bids IDs for every account ID","Current id for bids","","","","","Cancels position from “user-mode”","","","Make direct sell of ask (by user)","","","Get a ask information for a given unique ask ID (contract …","Get paginated list of Asks","Get paginated list of Asks for specified user","Get a bid information for a given unique bid ID (contract …","Get paginated list of Bids","Get paginated list of Bids for specified user","Returns the number of sales the marketplace has up (as a …","Returns the number of sales the marketplace has up (as a …","Get number of Positions by AccountId","","","Internal method for removing a ask from the market. This …","Internal method for removing a bid from the market. This …","","","","","","","Place Ask position on a market","Place Bid on a market","Process Bid. Can be used only by owner (for back-end)","Removes ask from the market.","","","","","","Return how much storage an account has paid for","Return how much storage an account has paid for","Allows users to deposit storage. This is to cover the cost …","Allows users to deposit storage. This is to cover the cost …","Keep track of the storage that accounts have paid","Return the minimum storage for 1 sale","Return the minimum storage for 1 sale","Allows users to withdraw any excess storage that they’re …","Allows users to withdraw any excess storage that they’re …","","","","","","","Updates the price for a sale on the market","","Ask struct, defines who sells, how much, and on what …","","Bid struct defines who want to buy, how much, and on what …","","","","","","","","","","","","","","","","Cancels position from “user-mode”","","","","","","","","","Make direct sell of ask (by user)","","","","","","","","FT contract where the token was minted","","","","","Owner of the ask","Owner of the bid","Place Ask position on a market","Place Bid on a market","Process Bid. Can be used only by owner (for back-end)","Removes ask from the market.","","Sale prices in yoctoNEAR that the token is listed for","Sale prices in yoctoNEAR that the token is listed for. …","","","","","","","","","","","","","","","","","","","","","Updates the price for a sale on the market","","Get a ask information for a given unique ask ID (contract …","Get paginated list of Asks","Get paginated list of Asks for specified user","Get a bid information for a given unique bid ID (contract …","Get paginated list of Bids","Get paginated list of Bids for specified user","Returns the number of sales the marketplace has up (as a …","Returns the number of sales the marketplace has up (as a …","Get number of Positions by AccountId"],"i":[1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,2,2,2,2,2,2,2,1,2,1,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,2,2,2,2,2,2,2,0,0,2,1,0,2,0,2,2,0,2,0,2,2,1,2,1,2,1,2,3,0,4,0,4,5,5,0,0,6,7,6,7,4,5,6,7,4,5,0,6,6,7,7,4,4,5,5,0,0,6,7,6,7,4,5,6,6,7,4,5,6,7,0,0,0,0,0,6,7,6,6,7,7,4,4,5,5,6,7,4,5,6,7,4,5,6,7,4,5,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["contractandid",6],["position",4]],["promise",3]],[[]],[[],[["error",3],["result",4,["error"]]]],[[["contractandid",6]],["promise",3]],[[]],[[]],[[["contractandid",6]],[["ask",3],["option",4,["ask"]]]],[[["u128",3],["u64",15],["option",4,["u64"]],["option",4,["u128"]]],[["vec",3,["ask"]],["ask",3]]],[[["u64",15],["accountid",3],["option",4,["u128"]],["option",4,["u64"]],["u128",15]],[["vec",3,["ask"]],["ask",3]]],[[["contractandid",6]],[["bid",3],["option",4,["bid"]]]],[[["u128",3],["u64",15],["option",4,["u64"]],["option",4,["u128"]]],[["vec",3,["bid"]],["bid",3]]],[[["u128",3],["accountid",3],["u64",15],["option",4,["u64"]],["option",4,["u128"]]],[["vec",3,["bid"]],["bid",3]]],[[],["u64",3]],[[],["u64",3]],[[["accountid",3],["position",4]],["u64",3]],[[["ask",3]],["ask",3]],[[["bid",3]],["bid",3]],[[["contractandid",6]],["ask",3]],[[["contractandid",6]],["bid",3]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[["accountid",3]]],null,[[["u128",3],["balance",6]],["promise",3]],[[["u128",3],["balance",6]],["bid",3]],[[["contractandid",6]],["promise",3]],[[["contractandid",6],["position",4]]],[[["contractandid",6],["position",4]]],null,null,[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[]],[[["accountid",3]],["u128",3]],[[]],[[["accountid",3],["option",4,["accountid"]]]],null,[[]],[[],["u128",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["contractandid",6],["u128",3],["position",4]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["gas",3],["accountid",3],["balance",6],["contractandid",6],["position",4]],["promise",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"StorageKey"],[3,"Contract"],[13,"ByOwnerIdInner"],[4,"Position"],[4,"Method"],[3,"Ask"],[3,"Bid"]]},\
"token_factory":{"doc":"Token Factory","t":[3,3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,0,5,11,11,11,11,5,11,5,11,5,5,11,11,11,11,5,11,12,0,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,17,17,17,17,17],"n":["FactoryContract","Token","TokenArgs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_ft","create_ft","default","deserialize","deserialize","deserialize","deserialize","deserialize","ext_self","force_transfer","force_transfer","from","from","from","get_number_of_tokens","get_number_of_tokens","get_token","get_token","get_token_account_id","get_tokens","get_tokens","into","into","into","new","new","owner","prices","serialize","serialize","serialize","serialize","serialize","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","get_token","FACTORY_CROSS_CALL","NO_DEPOSIT","STORAGE_PRICE_PER_BYTE","TOKEN_INIT_BALANCE","TOKEN_NEW"],"q":["token_factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","token_factory::ext_self","token_factory::prices","","","",""],"d":["Used for deploying child contracts and keeping track of …","Token object that combines AccountId name and TokenArgs","Structure to hold info about token","","","","","","","Create FT sub-account for user","Create FT sub-account for user","","","","","","","","Makes transfer of FT by hand , can used only by owner of …","Makes transfer of FT by hand , can used only by owner of …","","","","","","Get token by account","Get token by account","","Get tokens with pagination","Get tokens with pagination","","","","","","","","","","","","","","","","","","","","","","","","","","Price per 1 byte of usage mainnet genesis config.","Initial balance for the Token contract to cover usage and …","Gas to initialize Token contract."],"i":[0,0,0,1,2,3,1,2,3,0,1,1,1,2,2,3,3,0,0,1,1,2,3,0,1,0,1,0,0,1,1,2,3,0,1,1,0,1,2,2,3,3,1,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]],["promise",3]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],null,[[]],[[["accountid",3],["balance",6]],["promise",3]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[["accountid",3]],[["token",3],["option",4,["token"]]]],[[["accountid",3]],["accountid",3]],[[]],[[["u64",15]],[["vec",3,["token"]],["token",3]]],[[]],[[]],[[]],[[]],[[["accountid",3]]],null,null,[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["gas",3],["accountid",3],["balance",6]],["promise",3]],null,null,null,null,null],"p":[[3,"FactoryContract"],[3,"TokenArgs"],[3,"Token"]]},\
"utils":{"doc":"","t":[0,5,5],"n":["utils","resolve_promise_bool","split_account"],"q":["utils","utils::utils",""],"d":["","",""],"i":[0,0,0],"f":[null,[[],["bool",15]],[[["accountid",3]],[["vec",3,["str"]],["str",15]]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};